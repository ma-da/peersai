# Our dedicated gateway is: peers.mypinata.cloud
# Our gateway domain is: ai.peerservice.org

import requests
import json
import os

# ====== CONFIG ======
JWT = "THE_JWT"  # Your Pinata JWT
GATEWAY_DOMAIN = "https://ai.peerservice.org"
# ====================

def upload_file(file_path: str, name: str, keyvalues: dict) -> dict:
    """Upload a file to Pinata v3 and return the JSON response."""
    metadata_json = {"keyvalues": {k: str(v) for k, v in keyvalues.items()}} # all values must be strings
    upload_name = name or os.path.basename(file_path)

    with open(file_path, "rb") as file_data:
        files = {
            "file": (upload_name, file_data, "text/plain")
        }
        data = {
            "network": "public",
            "name": upload_name,
            "metadata": json.dumps(metadata_json)
        }
        headers = {"Authorization": f"Bearer {JWT}"}

        response = requests.post(
            "https://uploads.pinata.cloud/v3/files",
            headers=headers,
            files=files,
            data=data,
            timeout=120
        )

    if response.ok:
        print("Upload successful!")
        print(response.json())
        return response.json()
    else:
        print("Upload failed:", response.status_code, response.text)
        return {}
""" Example successful response: {'data': {'id': '01988bbf-ec57-7ca6-b686-ce84fecdfb8b', 'name': 'aitest2.txt', 'size': 281, 'mime_type': 'text/plain', 'cid': 'bafkreickkozp7gxrtteuh652gvhoap73iudgozvczqmjhwe5wodtjip234', 'network': 'public', 'number_of_files': 1, 'streamable': False, 'created_at': '2025-08-08T22:14:27.888Z', 'updated_at': '2025-08-08T22:14:27.888Z'}}"""
def download_file(cid: str, filename: str) -> str:
    """Download a raw file from your custom gateway by CID and filename."""
    url = f"{GATEWAY_DOMAIN}/ipfs/{cid}/{filename}?format=raw"
    headers = {"Accept": "text/plain, application/octet-stream;q=0.9"}

    response = requests.get(url, headers=headers)
    if response.ok:
        print("Download successful!")
        return response.text
    else:
        raise RuntimeError(f"Failed to fetch: {response.status_code} {response.text}")

if __name__ == "__main__":
    # Example: upload then download
    file_path = "C:/datasources/aitest2.txt"
    file_name = "aitest2.txt"
    kv = {"env": "prod"}

    upload_res = upload_file(file_path, file_name, kv)

    # If you want to immediately download, use the directory CID from the upload
    # (upload CID is usually a directory CID in v3)
    if "data" in upload_res:
        dir_cid = upload_res["data"]["cid"]
        file_text = download_file(dir_cid, file_name)
        print("File contents:\n", file_text)

